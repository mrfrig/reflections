What happens when you initialize a repository? Why do you need to do it?

	When a repository is initialize git creates the neccesary files to keep
	track of the repository and its needed because without those files the 
	version control system can't keep track of the commits and changes made
	to the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is different because this area only contains files that
	are going to be commited to the repository, the repository contains all the
	commits that have been made and the working directory contains the files of the
	most recent commit.



How can you use the staging area to make sure you have one commit per logical
change?

	The staging area allows you to separate files that are going to be commited
	from the ones that aren't going to be commited, so if you made changes to
	a group of files but half of them constitute a logical change and the other
	half constitute a different logical change, then you can use the staging area
	to make different commits for the each of the logical changes. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?